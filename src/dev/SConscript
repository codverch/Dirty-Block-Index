# -*- mode:python -*-

# Copyright (c) 2006 The Regents of The University of Michigan
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Steve Reinhardt
#          Gabe Black

import os.path, sys

# Import build environment variable from SConstruct.
Import('env')

# Right now there are no source files immediately in this directory
sources = []

#
# Now include other ISA-specific sources from the ISA subdirectories.
#

isa = env['TARGET_ISA'] # someday this may be a list of ISAs

#
# These source files can be used by any architecture
#

sources += Split('''
	baddev.cc
	disk_image.cc
	etherbus.cc
	etherdump.cc
	etherint.cc
	etherlink.cc
	etherpkt.cc
	ethertap.cc	
        ide_ctrl.cc
	ide_disk.cc
	io_device.cc
	isa_fake.cc
	ns_gige.cc
	pciconfigall.cc
	pcidev.cc
	pcifake.cc
	pktfifo.cc
	platform.cc
        simconsole.cc
	simple_disk.cc
	''')

# Let the target architecture define what additional sources it needs
sources += SConscript(os.path.join(isa, 'SConscript'), exports = 'env')

# Convert file names to SCons File objects.  This takes care of the
# path relative to the top of the directory tree.
sources = [File(s) for s in sources]

Return('sources')
