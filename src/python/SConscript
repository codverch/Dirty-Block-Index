# -*- mode:python -*-

# Copyright (c) 2004-2005 The Regents of The University of Michigan
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('*')

PySource('components_library', 'components_library/__init__.py')
PySource('components_library', 'components_library/coherence_protocol.py')
PySource('components_library', 'components_library/isas.py')
PySource('components_library', 'components_library/runtime.py')
PySource('components_library.boards', 'components_library/boards/__init__.py')
PySource('components_library.boards',
    'components_library/boards/abstract_board.py')
PySource('components_library.boards',
    'components_library/boards/mem_mode.py')
PySource('components_library.boards',
    'components_library/boards/riscv_board.py')
PySource('components_library.boards',
    'components_library/boards/simple_board.py')
PySource('components_library.boards',
    'components_library/boards/test_board.py')
PySource('components_library.boards', 'components_library/boards/x86_board.py')
PySource('components_library.cachehierarchies',
    'components_library/cachehierarchies/__init__.py')
PySource('components_library.cachehierarchies',
    'components_library/cachehierarchies/abstract_cache_hierarchy.py')
PySource('components_library.cachehierarchies',
    'components_library/cachehierarchies/'
    'abstract_two_level_cache_hierarchy.py')
PySource('components_library.cachehierarchies.classic',
    'components_library/cachehierarchies/classic/__init__.py')
PySource('components_library.cachehierarchies.classic',
    'components_library/cachehierarchies/classic/'
    'abstract_classic_cache_hierarchy.py')
PySource('components_library.cachehierarchies.classic',
    'components_library/cachehierarchies/classic/no_cache.py')
PySource('components_library.cachehierarchies.classic',
    'components_library/cachehierarchies/classic/'
    'private_l1_cache_hierarchy.py')
PySource('components_library.cachehierarchies.classic',
    'components_library/cachehierarchies/classic/'
    'private_l1_private_l2_cache_hierarchy.py')
PySource('components_library.cachehierarchies.classic.caches',
    'components_library/cachehierarchies/classic/caches/__init__.py')
PySource('components_library.cachehierarchies.classic.caches',
    'components_library/cachehierarchies/classic/caches/l1dcache.py')
PySource('components_library.cachehierarchies.classic.caches',
    'components_library/cachehierarchies/classic/caches/l1icache.py')
PySource('components_library.cachehierarchies.classic.caches',
    'components_library/cachehierarchies/classic/caches/l2cache.py')
PySource('components_library.cachehierarchies.classic.caches',
    'components_library/cachehierarchies/classic/caches/mmu_cache.py')
PySource('components_library.cachehierarchies.ruby',
    'components_library/cachehierarchies/ruby/__init__.py')
PySource('components_library.cachehierarchies.ruby',
    'components_library/cachehierarchies/ruby/'
    'abstract_ruby_cache_hierarchy.py')
PySource('components_library.cachehierarchies.ruby',
    'components_library/cachehierarchies/ruby/'
    'mesi_two_level_cache_hierarchy.py')
PySource('components_library.cachehierarchies.ruby',
    'components_library/cachehierarchies/ruby/mi_example_cache_hierarchy.py')
PySource('components_library.cachehierarchies.ruby.caches',
    'components_library/cachehierarchies/ruby/caches/__init__.py')
PySource('components_library.cachehierarchies.ruby.caches',
    'components_library/cachehierarchies/ruby/caches/abstract_directory.py')
PySource('components_library.cachehierarchies.ruby.caches',
    'components_library/cachehierarchies/ruby/caches/'
    'abstract_dma_controller.py')
PySource('components_library.cachehierarchies.ruby.caches',
    'components_library/cachehierarchies/ruby/caches/abstract_l1_cache.py')
PySource('components_library.cachehierarchies.ruby.caches',
    'components_library/cachehierarchies/ruby/caches/abstract_l2_cache.py')
PySource('components_library.cachehierarchies.ruby.caches.mesi_two_level',
    'components_library/cachehierarchies/ruby/caches/mesi_two_level/'
    '__init__.py')
PySource('components_library.cachehierarchies.ruby.caches.mesi_two_level',
    'components_library/cachehierarchies/ruby/caches/mesi_two_level/'
    'directory.py')
PySource('components_library.cachehierarchies.ruby.caches.mesi_two_level',
    'components_library/cachehierarchies/ruby/caches/mesi_two_level/'
    'dma_controller.py')
PySource('components_library.cachehierarchies.ruby.caches.mesi_two_level',
    'components_library/cachehierarchies/ruby/caches/mesi_two_level/'
    'l1_cache.py')
PySource('components_library.cachehierarchies.ruby.caches.mesi_two_level',
    'components_library/cachehierarchies/ruby/caches/mesi_two_level/'
    'l2_cache.py')
PySource('components_library.cachehierarchies.ruby.caches.mi_example',
    'components_library/cachehierarchies/ruby/caches/mi_example/__init__.py')
PySource('components_library.cachehierarchies.ruby.caches.mi_example',
    'components_library/cachehierarchies/ruby/caches/mi_example/directory.py')
PySource('components_library.cachehierarchies.ruby.caches.mi_example',
    'components_library/cachehierarchies/ruby/caches/mi_example/'
    'dma_controller.py')
PySource('components_library.cachehierarchies.ruby.caches.mi_example',
    'components_library/cachehierarchies/ruby/caches/mi_example/l1_cache.py')
PySource('components_library.cachehierarchies.ruby.topologies',
    'components_library/cachehierarchies/ruby/topologies/__init__.py')
PySource('components_library.cachehierarchies.ruby.topologies',
    'components_library/cachehierarchies/ruby/topologies/simple_pt2pt.py')
PySource('components_library.memory', 'components_library/memory/__init__.py')
PySource('components_library.memory',
    'components_library/memory/abstract_memory_system.py')
PySource('components_library.memory', 'components_library/memory/dramsim_3.py')
PySource('components_library.memory',
    'components_library/memory/single_channel.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/__init__.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/ddr3.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/ddr4.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/gddr.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/hbm.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/hmc.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/lpddr2.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/lpddr3.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/lpddr5.py')
PySource('components_library.memory.dram_interfaces',
    'components_library/memory/dram_interfaces/wideio.py')
PySource('components_library.processors',
    'components_library/processors/__init__.py')
PySource('components_library.processors',
    'components_library/processors/abstract_core.py')
PySource('components_library.processors',
    'components_library/processors/abstract_generator_core.py')
PySource('components_library.processors',
    'components_library/processors/abstract_processor.py')
PySource('components_library.processors',
    'components_library/processors/complex_generator_core.py')
PySource('components_library.processors',
    'components_library/processors/complex_generator.py')
PySource('components_library.processors',
    'components_library/processors/cpu_types.py')
PySource('components_library.processors',
    'components_library/processors/linear_generator_core.py')
PySource('components_library.processors',
    'components_library/processors/linear_generator.py')
PySource('components_library.processors',
    'components_library/processors/random_generator_core.py')
PySource('components_library.processors',
    'components_library/processors/random_generator.py')
PySource('components_library.processors',
    'components_library/processors/simple_core.py')
PySource('components_library.processors',
    'components_library/processors/simple_processor.py')
PySource('components_library.processors',
    'components_library/processors/simple_switchable_processor.py')
PySource('components_library.processors',
    'components_library/processors/switchable_processor.py')
PySource('components_library.resources',
    'components_library/resources/__init__.py')
PySource('components_library.resources',
    'components_library/resources/downloader.py')
PySource('components_library.resources',
    'components_library/resources/resource.py')
PySource('components_library.utils', 'components_library/utils/__init__.py')
PySource('components_library.utils', 'components_library/utils/filelock.py')
PySource('components_library.utils', 'components_library/utils/override.py')
PySource('components_library.utils', 'components_library/utils/requires.py')

PySource('', 'importer.py')
PySource('m5', 'm5/__init__.py')
PySource('m5', 'm5/SimObject.py')
PySource('m5', 'm5/config.py')
PySource('m5', 'm5/core.py')
PySource('m5', 'm5/debug.py')
PySource('m5', 'm5/event.py')
PySource('m5', 'm5/main.py')
PySource('m5', 'm5/options.py')
PySource('m5', 'm5/params.py')
PySource('m5', 'm5/proxy.py')
PySource('m5', 'm5/simulate.py')
PySource('m5', 'm5/ticks.py')
PySource('m5', 'm5/trace.py')
PySource('m5.objects', 'm5/objects/__init__.py')
PySource('m5.stats', 'm5/stats/__init__.py')
PySource('m5.util', 'm5/util/__init__.py')
PySource('m5.util', 'm5/util/attrdict.py')
PySource('m5.util', 'm5/util/code_formatter.py')
PySource('m5.util', 'm5/util/convert.py')
PySource('m5.util', 'm5/util/dot_writer.py')
PySource('m5.util', 'm5/util/dot_writer_ruby.py')
PySource('m5.util', 'm5/util/fdthelper.py')
PySource('m5.util', 'm5/util/grammar.py')
PySource('m5.util', 'm5/util/multidict.py')
PySource('m5.util', 'm5/util/pybind.py')
PySource('m5.util', 'm5/util/terminal.py')
PySource('m5.util', 'm5/util/terminal_formatter.py')

PySource('m5.internal', 'm5/internal/__init__.py')
PySource('m5.internal', 'm5/internal/params.py')
PySource('m5.ext', 'm5/ext/__init__.py')
PySource('m5.ext.pyfdt', 'm5/ext/pyfdt/pyfdt.py')
PySource('m5.ext.pyfdt', 'm5/ext/pyfdt/__init__.py')

PySource('m5.ext.pystats', 'm5/ext/pystats/__init__.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/jsonserializable.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/group.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/simstat.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/statistic.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/storagetype.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/timeconversion.py')
PySource('m5.ext.pystats', 'm5/ext/pystats/jsonloader.py')
PySource('m5.stats', 'm5/stats/gem5stats.py')

Source('pybind11/core.cc', add_tags='python')
Source('pybind11/debug.cc', add_tags='python')
Source('pybind11/event.cc', add_tags='python')
Source('pybind11/object_file.cc', add_tags='python')
Source('pybind11/stats.cc', add_tags='python')
