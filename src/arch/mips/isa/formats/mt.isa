// -*- mode:c++ -*-

////////////////////////////////////////////////////////////////////
//
// MT instructions
//

output header {{
        /**
         * Base class for integer operations.
         */
        class MT : public MipsStaticInst
        {
                protected:

                /// Constructor
                MT(const char *mnem, MachInst _machInst, OpClass __opClass) : MipsStaticInst(mnem, _machInst, __opClass)
                {
                }

                std::string generateDisassembly(Addr pc, const SymbolTable *symtab) const;
        };
}};

output decoder {{
        //Edit This Template When MT is Implemented
        std::string MT::generateDisassembly(Addr pc, const SymbolTable *symtab) const
        {
                return "Disassembly of MT instruction\n";
        }
}};

def template MTExecute {{
        //Edit This Template When MT is Implemented
        Fault %(class_name)s::execute(%(CPU_exec_context)s *xc, Trace::InstRecord *traceData) const
        {
                //Write the resulting state to the execution context
                %(op_wb)s;

                //Call into the trap handler with the appropriate fault
                return No_Fault;
        }
}};

// Primary format for integer operate instructions:
def format MipsMT() {{
        code = 'panic(\"Mips MT Is Currently Unimplemented.\");\n'
        iop = InstObjParams(name, Name, 'MT', CodeBlock(code))
        header_output = BasicDeclare.subst(iop)
        decoder_output = BasicConstructor.subst(iop)
        decode_block = BasicDecode.subst(iop)
        exec_output = BasicExecute.subst(iop)
}};
