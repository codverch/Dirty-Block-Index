# -*- mode:python -*-

# Copyright (c) 2006 The Regents of The University of Michigan
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Korey Sewell

import os
import os.path
import sys

# Import build environment variable from SConstruct.
Import('env')


#################################################################
#
# Include ISA-specific files for the O3 CPU-model
#
#################################################################

sources = []

if env['TARGET_ISA'] == 'alpha':
    sources += Split('''
        alpha/dyn_inst.cc
        alpha/cpu.cc
        alpha/thread_context.cc
        alpha/cpu_builder.cc
        ''')
elif env['TARGET_ISA'] == 'mips':
    sources += Split('''
        mips/dyn_inst.cc
        mips/cpu.cc
        mips/thread_context.cc
        mips/cpu_builder.cc
        ''')
elif env['TARGET_ISA'] == 'sparc':
    sys.exit('O3 CPU does not support Sparc')
    #sources += Split('''
    #    sparc/dyn_inst.cc
    #    sparc/cpu.cc
    #    sparc/thread_context.cc
    #    sparc/cpu_builder.cc
    #    ''')
else:
    sys.exit('O3 CPU does not support the \'%s\' ISA' % env['TARGET_ISA'])


# Convert file names to SCons File objects.  This takes care of the
# path relative to the top of the directory tree.
sources = [File(s) for s in sources]

Return('sources')

